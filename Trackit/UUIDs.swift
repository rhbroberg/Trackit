//
//  UUIDs.swift
//  Trackit
//
//  Created by Richard Broberg on 1/8/17.
//  Copyright Â© 2017 Brobasino. All rights reserved.
//

import Foundation
import CoreBluetooth

struct uuids {
    //
    static let server_uuid : [UInt8] = [ 0x19, 0xA0, 0x1F, 0x49, 0xFF, 0xE5, 0x40, 0x56, 0x84, 0x5B, 0x6D, 0xF1, 0xF1, 0xB1, 0x6E, 0x9D ]
    //
    static let gsm_service : [UInt8]  = [ 0xF0, 0x40, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x19, 0x2A, 0x09, 0x00 ]
    static let proxyIP_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF9 ]
    static let apn_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF8 ]
    static let proxyPort_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF7 ]
    //
    static let mqtt_service : [UInt8]  = [ 0xF0, 0x40, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x19, 0x2A, 0x09, 0x01 ]
    static let aioKey_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF6 ]
    static let aioServer_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF5 ]
    static let aioUsername_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF4 ]
    static let aioPort_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF3 ]
    //
    static let sim_service : [UInt8]  = [ 0xF0, 0x40, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x19, 0x2A, 0x09, 0x02 ]
    static let simIMSI_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF2 ]
    static let simIMEI_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF1 ]
    static let simICCI_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xF0 ]
    //
    static let post_service : [UInt8]  = [ 0xF0, 0x40, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x19, 0x2A, 0x09, 0x03 ]
    static let gpsDelay_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xEF ]
    //
    static let cell_service : [UInt8]  = [ 0xF0, 0x40, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x19, 0x2A, 0x09, 0x04 ]
    static let arfcn_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xEE ]
    static let bsic_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xED ]
    static let rxlev_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xEC ]
    static let towerId_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xEB ]
    //
    static let version_service : [UInt8]  = [ 0xF0, 0x40, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x19, 0x2A, 0x09, 0x05 ]
    static let name_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xEA ]
    static let version_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xE0 ]
    static let firmware_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xE9 ]
    //
    static let motion_service : [UInt8]  = [ 0xF0, 0x40, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x19, 0x2A, 0x09, 0x06 ]
    static let motionDelay_uuid : [UInt8]  = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xE8 ]
    //
    static let app_service : [UInt8] = [ 0xF0, 0x40, 0x9B, 0x5F, 0x80, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x19, 0x2A, 0x09, 0x07 ]
    static let bleName_uuid : [UInt8] = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xE6 ]
    static let reboot_uuid : [UInt8] = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xE5 ]
    static let defaults_uuid : [UInt8] = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xE4 ]
    static let maintainBLE_uuid : [UInt8] = [ 0xFA, 0x33, 0x9B, 0x5F, 0xA0, 0x00, 0x00, 0x80, 0x00, 0x10, 0x00, 0x02, 0x19, 0x2A, 0x04, 0xE3 ]

    static func convert(from deviceRepresentation: [UInt8]) -> CBUUID {
        var uuid = ""

        // after this many chars 4, 2, 2, 2, 6  put a dash
        for byte in deviceRepresentation.reversed() {
            let hexChar = String(format: "%02X", byte)
            uuid = uuid + hexChar

            switch uuid.characters.count {
            case 8,  // 4 * 2
                 13, // (4 + 2) * 2 + 1
                 18, // (4 + 2 + 2) * 2 + 2
                 23: // (4 + 2 + 2 +2) * 2 + 3
                uuid = uuid + "-"
            default: break
            }
        }
        return CBUUID(string : uuid)
    }
}
